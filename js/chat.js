// js/chat.js

export function initChat({ sendBtn, userInput, chatBody, soundBtn }) {
    let soundOn = true;
    let conversationHistory = [];
    let typingTimeout = null;
    let isTyping = false;
    
    // Inicializar elementos obrigat√≥rios
    sendBtn.addEventListener('click', sendMessage);
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });

    soundBtn.addEventListener('click', () => {
        soundOn = !soundOn;
        soundBtn.innerText = soundOn ? 'üîä' : 'üîá';
        // Salvar prefer√™ncia no localStorage
        localStorage.setItem('furiaChat_soundOn', soundOn);
    });
    
    // Carregar configura√ß√µes salvas
    function loadSavedSettings() {
        const savedSound = localStorage.getItem('furiaChat_soundOn');
        if (savedSound !== null) {
            soundOn = savedSound === 'true';
            soundBtn.innerText = soundOn ? 'üîä' : 'üîá';
        }
        
        // Carregar hist√≥rico de conversa (limitado a 20 mensagens)
        const savedHistory = localStorage.getItem('furiaChat_history');
        if (savedHistory) {
            try {
                const parsedHistory = JSON.parse(savedHistory);
                if (Array.isArray(parsedHistory)) {
                    conversationHistory = parsedHistory.slice(-20);
                    // Restaurar mensagens na tela
                    conversationHistory.forEach(msg => {
                        appendMessage(msg.text, msg.sender, false);
                    });
                    chatBody.scrollTop = chatBody.scrollHeight;
                }
            } catch (e) {
                console.error('Erro ao carregar hist√≥rico:', e);
                localStorage.removeItem('furiaChat_history');
            }
        }
        
        // Mostrar mensagem de boas-vindas se n√£o houver hist√≥rico
        if (conversationHistory.length === 0) {
            setTimeout(() => {
                appendMessage('Ol√°! Sou o bot oficial da FURIA. Como posso ajudar voc√™ hoje? üî•', 'bot');
            }, 500);
        }
    }
    
    // Carregar configura√ß√µes no in√≠cio
    loadSavedSettings();

    function sendMessage() {
        const text = userInput.value.trim();
        if (!text || isTyping) return;

        appendMessage(text, 'user');
        saveToHistory(text, 'user');
        userInput.value = '';

        // Habilitar an√°lise de sentimento para respostas personalizadas
        const sentiment = analyzeSentiment(text);
        
        isTyping = true;
        simulateTyping().then(() => {
            isTyping = false;
            const response = getBotResponse(text, sentiment);
            appendMessage(response, 'bot');
            saveToHistory(response, 'bot');
            if (soundOn) playSound();
        });
    }

    function appendMessage(text, sender, animate = true) {
        const msg = document.createElement('div');
        msg.classList.add('message', sender);
        
        // Simplificado: sem √≠cone e sem timestamp
        msg.innerText = text;
        
        // Formata√ß√£o de links (mantida para funcionalidade)
        msg.innerHTML = formatMessage(text);
        
        // Anima√ß√£o de entrada
        if (animate) {
            msg.style.opacity = '0';
            msg.style.transform = 'translateY(10px)';
        }
        
        chatBody.appendChild(msg);
        chatBody.scrollTop = chatBody.scrollHeight;
        
        // Aplicar anima√ß√£o
        if (animate) {
            setTimeout(() => {
                msg.style.transition = 'all 0.3s ease';
                msg.style.opacity = '1';
                msg.style.transform = 'translateY(0)';
            }, 10);
        }
    }

    function formatMessage(text) {
        // Converter URLs em links clic√°veis
        const urlRegex = /(https?:\/\/[^\s]+)/g;
        text = text.replace(urlRegex, url => `<a href="${url}" target="_blank">${url}</a>`);
        
        // Processar formata√ß√£o b√°sica (negrito, it√°lico)
        text = text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        text = text.replace(/\*(.*?)\*/g, '<em>$1</em>');
        
        return text;
    }

    function simulateTyping() {
        return new Promise(resolve => {
            const typing = document.createElement('div');
            typing.classList.add('message', 'bot');
            typing.innerText = 'Digitando...';
            chatBody.appendChild(typing);
            chatBody.scrollTop = chatBody.scrollHeight;

            // Calcular tempo de digita√ß√£o baseado no tamanho da resposta
            const responseLength = getEstimatedResponseLength();
            const delay = Math.min(3000, 600 + (responseLength * 20));
            
            typingTimeout = setTimeout(() => {
                chatBody.removeChild(typing);
                resolve();
            }, delay);
        });
    }
    
    function getEstimatedResponseLength() {
        // Simular o comprimento esperado da resposta
        return Math.floor(Math.random() * 100) + 50;
    }

    function getBotResponse(input, sentiment) {
        const text = input.toLowerCase();
        const responses = {
            greetings: [
                'E a√≠, fera! Pronto pra falar sobre a FURIA? üî•',
                'Ol√°, guerreiro da FURIA! Como posso ajudar? üéÆ',
                'Fala, campe√£o! O que manda? Estou aqui para ajudar com tudo sobre a FURIA!'
            ],
            nextGame: [
                'A FURIA joga contra a NAVI amanh√£ √†s 18h! üî• Vai ser um show de Counter-Strike!',
                'Pr√≥ximo confronto: FURIA vs G2 dia 25/04 √†s 20h. Vai ser √©pico! Voc√™ vai assistir?',
                'Temos FURIA vs Liquid neste final de semana! S√°bado, 15h, ao vivo na Twitch e Youtube!'
            ],
            team: [
                'Nossa escala√ß√£o atual no CS: KSCERATO, yuurih, chelo, FalleN e arT. Um verdadeiro dream team! üí™',
                'Hoje o lineup √©: KSCERATO, yuurih, chelo, FalleN e arT. üî• Qual √© seu jogador favorito?',
                'Nossa line principal: KSCERATO, yuurih, chelo, FalleN e arT. Temos tamb√©m equipes de LoL, Valorant e Free Fire!'
            ],
            history: [
                'Na √∫ltima partida, vencemos a Vitality por 2-0 com destaque pro KSCERATO! Foi uma performance absurda com 30+ frags no segundo mapa.',
                'Historicamente, estamos 5-1 contra a BIG. Bora manter essa m√©dia! Nossa equipe tem evolu√≠do muito nas t√°ticas.',
                '√öltimo campeonato: Top 4 no Major! KSCERATO foi eleito o 3¬∫ melhor jogador do evento. Estamos crescendo a cada dia!'
            ],
            quotes: [
                '"Furia never stops!" üí• - Este √© nosso lema todos os dias.',
                '"Pain is a proof of progress." ‚Äì FalleN, nosso capit√£o lend√°rio.',
                '"N√£o √© sobre ganhar, √© sobre nunca desistir." ‚Äì arT, quando perguntado sobre a ess√™ncia da FURIA.'
            ],
            social: [
                'Segue a gente no Twitter: https://twitter.com/furia üéÆ Postamos updates di√°rios!',
                'Nosso canal na Twitch: https://twitch.tv/furia - Streams quase todos os dias com nossos jogadores!',
                'Instagram com os bastidores: https://instagram.com/furia - Conte√∫do exclusivo e momentos especiais da equipe.'
            ],
            cheer: [
                '#FURIASTRONG! Vamos juntos! A torcida √© nossa for√ßa. üí™',
                'Sinta a FURIA correr nas veias! üî• O rugido que ecoa pelo mundo.',
                'VAMOS FURIA! üêØ Somos a maior organiza√ß√£o da Am√©rica Latina por um motivo!'
            ],
            valorant: [
                'Nossa equipe de Valorant est√° detonando! √öltimos resultados: 3 vit√≥rias consecutivas no VCT Americas!',
                'No Valorant, somos atuais campe√µes do VCT Americas Challengers. Pr√≥ximo desafio: Masters Reykjav√≠k!',
                'Quick (capit√£o), nozwerR, qck, Mazin e dgzin formam nossa line de Valorant. Verdadeiros monstros!'
            ],
            lol: [
                'No League of Legends, estamos em 3¬∫ lugar no CBLOL atual. Acreditamos que podemos chegar √† final!',
                'Nossa equipe de LoL: Robo, Croc, Tinowns, Neo e RedBert. Eles est√£o com fome de vit√≥ria!',
                '√öltimo split do CBLOL: Top 4! Estamos melhorando a cada temporada no cen√°rio de League of Legends.'
            ],
            store: [
                'Nossa loja oficial: https://loja.furia.gg/ - Use o cupom "CHATBOT10" para 10% de desconto!',
                'Acabou de sair nossa cole√ß√£o 2025! Camisetas, moletons e muito mais em https://loja.furia.gg/',
                'Quer representar a FURIA? Nova jersey dispon√≠vel na loja: https://loja.furia.gg/jersey - Design exclusivo!'
            ],
            schedule: [
                'Esta semana temos: CS vs NAVI (ter√ßa, 18h), Valorant vs Loud (quarta, 19h), LoL vs Pain (s√°bado, 14h).',
                'Agenda completa em https://furia.gg/calendar - N√£o perca nenhum jogo!',
                'Pr√≥ximas partidas: CS (ter√ßa e quinta), Valorant (quarta), LoL (s√°bado e domingo). Confira hor√°rios no site!'
            ],
            results: [
                'Resultados recentes: CS (vit√≥ria vs Vitality 2-0), Valorant (vit√≥ria vs NiP 2-1), LoL (derrota vs Loud 1-2).',
                '√öltimo final de semana: 4 vit√≥rias em 5 jogos! O rugido da FURIA est√° mais forte do que nunca!',
                'Ganhamos 3 das √∫ltimas 4 partidas de CS! A equipe est√° em √≥tima fase ap√≥s mudan√ßas t√°ticas.'
            ],
            coaches: [
                'Nossos treinadores: guerri (CS), ddx (Valorant) e Maestro (LoL). Verdadeiros estrategistas!',
                'O staff t√©cnico da FURIA √© um dos melhores do mundo. Guerri est√° h√° mais de 5 anos liderando a evolu√ß√£o da equipe.',
                'Al√©m dos head coaches, temos analistas, psic√≥logos e preparadores f√≠sicos. Estrutura completa!'
            ],
            help: [
                'Posso te ajudar com: pr√≥ximos jogos, line-ups, resultados recentes, loja oficial, redes sociais, hist√≥ria da FURIA, e muito mais! Sobre o que quer saber?',
                'Estou aqui para responder sobre nossos times, jogadores, hist√≥ria, pr√≥ximos jogos, loja e muito mais! O que quer descobrir sobre a FURIA?',
                'Como posso ajudar? Posso falar sobre escala√ß√µes, partidas, bastidores, loja, redes sociais... √â s√≥ pedir!'
            ],
            events: [
                'Pr√≥ximo evento presencial: FURIA Fan Day em S√£o Paulo (15/05) - Encontre seus jogadores favoritos!',
                'Em junho teremos bootcamp aberto ao p√∫blico em nossa Gaming House. Inscri√ß√µes pelo site em breve!',
                'FURIA Convention acontecer√° em julho! Tr√™s dias de competi√ß√µes, meet & greet e muito mais!'
            ],
            international: [
                'Sim! A FURIA tem f√£s em mais de 50 pa√≠ses! Nossa maior base fora do Brasil √© nos EUA e Portugal.',
                'Nossa Gaming House principal fica no Brasil, mas temos instala√ß√µes nos EUA para bootcamps internacionais.',
                'A FURIA √© uma organiza√ß√£o global! Competimos em torneios na Am√©rica, Europa e √Åsia regularmente.'
            ],
            positive: [
                '√â por isso que fazemos tudo isso! Saber que temos f√£s incr√≠veis como voc√™ nos motiva todos os dias! üíØ',
                'Sua energia positiva √© o que nos move! Obrigado por fazer parte da fam√≠lia FURIA! ‚ù§Ô∏è',
                'Esse √© o esp√≠rito! Juntos somos mais fortes. A FURIA √© feita por cada um de voc√™s! üî•'
            ],
            negative: [
                'Entendo sua frustra√ß√£o. Sempre buscamos melhorar! Poderia nos dizer mais sobre como podemos evoluir?',
                'Dias dif√≠ceis fazem parte, mas estamos sempre trabalhando para superar. Agradecemos sua sinceridade e apoio cont√≠nuo!',
                'Valorizamos seu feedback, mesmo nos momentos dif√≠ceis. √â assim que crescemos juntos como uma comunidade!'
            ],
            default: [
                'Desculpa, n√£o entendi. Manda outra pergunta! Posso falar sobre times, jogos, loja e mais.',
                'Me explica melhor isso a√≠? Quero te ajudar, mas preciso entender melhor sua pergunta.',
                'T√¥ pronto pra responder, s√≥ preciso de mais detalhes üòâ Pode reformular?'
            ]
        };

        // Verificar m√∫ltiplas categorias para responder de forma mais contextual
        let possibleResponses = [];
        
        if (/\b(oi|ol√°|e a√≠|fala|eae|salve|hey|hi)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.greetings];
        
        if (/\b(pr√≥xim[oa]? jogo|quando|hor√°rio|confronto|joga|partida)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.nextGame];
        
        if (/\b(time|lineup|escala√ß√£o|line-up|jogador|elenco|forma√ß√£o|quem joga)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.team];
        
        if (/\b(√∫ltima|hist√≥rico|resultado|placar|como foi|ganharam|perderam)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.history];
        
        if (/\b(frase|quote|diga|fala|slogan|mantra)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.quotes];
        
        if (/\b(twitch|youtube|twitter|instagram|social|rede|seguir)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.social];
        
        if (/\b(motto|grito|cheer|vibra|torcer|torcida)\b/.test(text)) 
            possibleResponses = [...possibleResponses, ...responses.cheer];
            
        if (/\b(valorant|val|vava)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.valorant];
            
        if (/\b(lol|league|legends)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.lol];
            
        if (/\b(loja|comprar|merchandise|camisa|jersey|produtos)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.store];
            
        if (/\b(agenda|calend√°rio|quando|schedule|programa√ß√£o)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.schedule];
            
        if (/\b(resultado|ganhou|perdeu|placar|score|recente)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.results];
            
        if (/\b(t√©cnico|coach|treinador|comiss√£o|staff)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.coaches];
            
        if (/\b(ajuda|help|o que|pode|consegue|informa√ß√£o|falar sobre)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.help];
            
        if (/\b(evento|presencial|conhecer|encontro|encontrar|meet|convention)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.events];
            
        if (/\b(internacional|fora|exterior|brasil|pa√≠s|pa√≠ses|global)\b/.test(text))
            possibleResponses = [...possibleResponses, ...responses.international];
            
        // Adicionar respostas baseadas em sentimento
        if (sentiment > 0.5) 
            possibleResponses = [...possibleResponses, ...responses.positive];
        else if (sentiment < -0.5)
            possibleResponses = [...possibleResponses, ...responses.negative];
        
        // Se nenhuma categoria espec√≠fica foi identificada, use respostas padr√£o
        if (possibleResponses.length === 0) {
            possibleResponses = responses.default;
        }

        // Contexto de conversa - verificar mensagens anteriores para manter coer√™ncia
        if (conversationHistory.length >= 2) {
            const lastQuestion = conversationHistory[conversationHistory.length - 2].text.toLowerCase();
            const lastResponse = conversationHistory[conversationHistory.length - 1].text;
            
            // Se a pergunta atual for um follow-up da anterior
            if (/\b(sim|n√£o|quem|qual|quando|onde|como|por que|e|mas)\b/.test(text) && text.length < 15) {
                if (/pr√≥xim[oa]? jogo/.test(lastQuestion)) {
                    return "Al√©m desse jogo, tamb√©m temos partidas importantes nas pr√≥ximas semanas! Quer que eu te mostre o calend√°rio completo?";
                }
                if (/time|lineup/.test(lastQuestion)) {
                    return "Nossa line-up tem sido muito consistente nos √∫ltimos meses. O FalleN trouxe muita experi√™ncia para o time desde que chegou. Quer saber mais sobre algum jogador espec√≠fico?";
                }
            }
        }

        return random(possibleResponses);
    }
    
    function analyzeSentiment(text) {
        // An√°lise de sentimento b√°sica
        const positiveWords = ['bom', '√≥timo', 'excelente', 'legal', 'incr√≠vel', 'top', 'melhor', 'amei', 'gosto', 'parab√©ns', 'vamo', 'vamos', 'vit√≥ria', 'ganhar'];
        const negativeWords = ['ruim', 'p√©ssimo', 'horr√≠vel', 'fraco', 'pior', 'triste', 'decep√ß√£o', 'perder', 'perdeu', 'chato', 'dif√≠cil', 'f√°cil', 'reclama'];
        
        let score = 0;
        const words = text.toLowerCase().split(/\s+/);
        
        for (const word of words) {
            if (positiveWords.some(pw => word.includes(pw))) score += 0.2;
            if (negativeWords.some(nw => word.includes(nw))) score -= 0.2;
        }
        
        // Ajustar com base em pontua√ß√£o
        if (text.includes('!')) score += 0.1;
        if (text.includes('?')) score -= 0.05;
        if (text.includes('üò°') || text.includes('üëé')) score -= 0.3;
        if (text.includes('üòç') || text.includes('üëç') || text.includes('‚ù§Ô∏è')) score += 0.3;
        
        return Math.max(-1, Math.min(1, score)); // Limitar entre -1 e 1
    }

    function random(arr) {
        return arr[Math.floor(Math.random() * arr.length)];
    }

    function playSound() {
        const sounds = [
            'https://www.myinstants.com/media/sounds/pop-up-kaito.mp3',
            '/sounds/notifica√ßao.mp3',
            '/sounds/notifica√ßao.mp3'
        ];
        const audio = new Audio(random(sounds));
        audio.volume = 0.5; // Volume moderado
        audio.play().catch(e => console.log('Erro ao reproduzir som:', e));
    }
    
    function saveToHistory(text, sender) {
        conversationHistory.push({ text, sender, timestamp: Date.now() });
        // Limitar hist√≥rico a 50 mensagens
        if (conversationHistory.length > 50) {
            conversationHistory = conversationHistory.slice(-50);
        }
        // Salvar no localStorage
        try {
            localStorage.setItem('furiaChat_history', JSON.stringify(conversationHistory));
        } catch (e) {
            console.error('Erro ao salvar hist√≥rico:', e);
        }
    }
}